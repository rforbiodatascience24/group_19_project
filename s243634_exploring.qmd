---
title: "exploring"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

## Victor exploring

Code from working document

```{r}
data <- read.csv("risk_factors_cervical_cancer.csv")
library(tidyverse)
library(dplyr)
data <- data %>%
  mutate(across(where(is.character), ~na_if(., "?")))

data <- data %>%
  mutate(Smokes = case_when(
    Smokes == "0.0" ~ "no",
    Smokes == "1.0" ~ "yes"
  ))
data <- data |> 
  mutate(Hormonal.Contraceptives = case_when(
    Hormonal.Contraceptives == "1.0" ~ "yes",
    Hormonal.Contraceptives == "0.0" ~ "no"))

data <- data |> 
  rename('Smokes.years'= Smokes..years.,
         'Smokes.packs.years' = Smokes..packs.year.) |> 
  mutate(Smokes.years = as.numeric(Smokes.years),
         Smokes.packs.years = as.numeric(Smokes.packs.years))

data  <- data |> 
  mutate(Number.of.sexual.partners = as.integer(Number.of.sexual.partners),
         First.sexual.intercourse = as.integer(First.sexual.intercourse),
         Num.of.pregnancies = as.integer(Num.of.pregnancies))
data <- data %>%
  mutate(ID = row_number()) %>%
  select(ID, everything())

data


data <- data %>% mutate(IUD = case_when(IUD == "0.0" ~ "no",
                                IUD == "1.0" ~ "yes"))
```

Exploring

```{r}

data |> 
  ggplot()+
  geom_point(mapping = aes(x= Number.of.sexual.partners, y = STDs))

# Age and id STD or not. Probably better on the original data rows
data |> 
  ggplot()+
  geom_boxplot(mapping = aes(x= Age, y = factor(STDs)))

# convert the cancer column to integers
data$Dx.Cancer <- as.integer(data$Dx.Cancer)
#
data |> 
  ggplot()+
  geom_boxplot(mapping = aes(x = Age, y = factor(Dx.Cancer)))
# we could calculate if there is statistical significance

data_long |> 
  ggplot()+
  geom_boxplot(mapping = aes(x = Age, y = factor(STDs_type)))+
  facet_wrap(~STDs_value)

median(data$Age)
```

Facet wrap so we get all STD types vs Age

Pivot the data longer so there is a row for each patient-STD type combination

```{r}


data_long <- data %>%
  select(-`STDs..Number.of.diagnosis`, -`STDs..number.`,-`STDs..Time.since.first.diagnosis`, -`STDs..Time.since.last.diagnosis`) %>% # Exclude the column here
  pivot_longer(
    cols = starts_with("STDs"), # Include remaining STDs columns
    names_to = "STDs_type",
    values_to = "STDs_value"
  )

# facet wrap for STDs_type

data_long |> 
  ggplot()+
  geom_boxplot(mapping = aes( x = Age, y = STDs_value))+
  facet_wrap(~STDs_type, scales = "free_y")
# How many of the that smoke also have STDS
xx <- data |> 
  filter(STDs == "1.0", Smokes == "yes") |> 
  summarize(count=n())
# How many of them that 
xx1 <- data |> 
  filter(!is.na(STDs), Smokes == "yes") |> 
  summarize(count=n())
# so if you are a smoker oddsratio of getting STDs are:
xx$count/xx1$count


# now for none smokers:
xx_non <- data |> 
  filter(STDs == "1.0", Smokes == "no") |> 
  summarize(count=n())
# How many of them that 
xx1_non <- data |> 
  filter(!is.na(STDs), Smokes == "no") |> 
  summarize(count=n())
xx_non$count/xx1_non$count
```

Are smokers more at risk of getting STDs:

We could do facet wrap of the data and use the numbers to calculate the different percentages. There must be a way to plot the percentage of STD positives for smokers and not smokers.

```{r}
xx <- data |> 
  filter(STDs == "1.0", Smokes == "yes") |> 
  summarize(count=n())
# How many of them that 
xx1 <- data |> 
  filter(!is.na(STDs), Smokes == "yes") |> 
  summarize(count=n())
# so if you are a smoker chance of getting STDs are:
xx$count/xx1$count


# now for none smokers:
xx_non <- data |> 
  filter(STDs == "1.0", Smokes == "no") |> 
  summarize(count=n())
# How many of them that 
xx1_non <- data |> 
  filter(!is.na(STDs), Smokes == "no") |> 
  summarize(count=n())
xx_non$count/xx1_non$count


```

In this way it could be cool with a confusion matrix for smokers vs STDs

Are women on contraceptives in higher risk of getting STDs

```{r}
xx_contra <- data |> 
  filter(STDs == "1.0", Hormonal.Contraceptives == "yes") |> 
  summarize(count=n())
# How many of them that 
xx1_contra <- data |> 
  filter(!is.na(STDs), Hormonal.Contraceptives == "yes") |> 
  summarize(count=n())
# so if you are a contraceptive chance of getting STDs are:
xx_contra$count/xx1_contra$count


# now for none contraceptives:
xx_non_contra <- data |> 
  filter(STDs == "1.0", Hormonal.Contraceptives == "no") |> 
  summarize(count=n())
# How many of them that 
xx1_non_contra <- data |> 
  filter(!is.na(STDs), Hormonal.Contraceptives == "no") |> 
  summarize(count=n())
xx_non_contra$count/xx1_non_contra$count


```

Facet wrap for smokes vs type of STDs

```{r}

data_long |> 
  ggplot(aes(x = Smokes, fill = STDs_value)) + 
  geom_bar(position = "dodge")+
  facet_wrap(~STDs_type)
```

A plot of smokes vs STDs yes or no

```{r}
data_prop_smokes <- data %>%
  group_by(Smokes) %>%
  summarize(  
    count = STDs == "1.0"                            # Total rows in the group
              # Proportion of "yes" STDs
  )

data_prop <- data_long %>%
  group_by(STDs_type, Smokes) %>%
  summarize(
    proportion_yes = n()  # Proportion of STDs_value == 1
  )
data |> 
  ggplot(aes(x = Smokes, fill = factor(STDs))) + 
  geom_bar(position = "dodge")

data_prop_smokes <- data %>%
  group_by(Smokes) %>%
  summarize(
    proportion_yes = mean(STDs == "yes", na.rm = TRUE), STDs = STDs  # Proportion of STDs == "yes"
  )
data_prop_smokes |> 
  ggplot(aes(x = Smokes, y = proportion_yes, fill = Smokes)) +
  geom_col() +  # Use geom_col for pre-summarized data
  labs(x = "Smoking Status", 
       y = "Proportion with STDs (Yes)", 
       title = "Proportion of STDs (Yes) by Smoking Status") +
  scale_y_continuous(labels = scales::percent) +  # Format y-axis as percentage
  theme_minimal()
```

A plot of contraception vs STDs

```{r}
data |> 
  ggplot(aes(x = First.sexual.intercourse, fill = STDs)) + 
  geom_bar(position = "dodge")
# instead of counts i want the proportion

data_prop <- data %>%
  group_by(Age) %>%
  summarize(proportion_yes = (STDs == "1.0"/n()))

data_prop <- data %>%
  group_by(Age) %>%
  summarize(
    count_yes = sum(STDs == "1.0", na.rm = TRUE),  # Count where STDs == 1.0
    total = n(),                                # Total rows in the group
    proportion_yes = count_yes / total          # Proportion of "yes"
  )

data_prop |> 
  ggplot()+
  geom_bar(x = data_prop$Age, y = data$proportion_yes)
data_prop |> 
  ggplot(aes(x = Age, y = proportion_yes)) +  # Map x and y variables
  geom_col(fill = "blue") +  # Use geom_col() for pre-summarized data
  labs(x = "Age", y = "Proportion with STDs (1.0)",
       title = "Proportion of STDs (1.0) by Age") +
  scale_y_continuous(labels = scales::percent) +  # Show y-axis as percentages
  theme_minimal()
```

Add a column

Want to see if the having STDs is correlated with having cancer

Risk of getting cancer if you have at least one STD vs Risk of getting cancer if you dont have an STD

```{r}

xx_cancer <- data |> 
  filter(Dx.Cancer == 1, STDs == "1.0") |> 
  summarize(count=n())
# How many of them that 
xx1_cancer <- data |> 
  filter(!is.na(Dx.Cancer),STDs == "1.0") |> 
  summarize(count=n())
# so if you are a smoker chance of getting STDs are:
xx_cancer$count/xx1_cancer$count


# now for none smokers:
xx_non_std <- data |> 
  filter(Dx.Cancer == 1, STDs == "0.0") |> 
  summarize(count=n())
# How many of them that 
xx1_non_std <- data |> 
  filter(!is.na(Dx.Cancer), STDs == "0.0") |> 
  summarize(count=n())
xx_non_std$count/xx1_non_std$count

```

From the above chunk it looks like there isnt a correlation between having an STD and cervical cancer

Lets look at HPV specifically as diagnosis:

```{r}
xx_cancer_hpv <- data |> 
  filter(Dx.Cancer == 1, Dx.HPV == 1) |> 
  summarize(count=n())
# How many of them that 
xx1_cancer_hpv <- data |> 
  filter(!is.na(Dx.Cancer),Dx.HPV == 1) |> 
  summarize(count=n())
# so if you are a smoker chance of getting STDs are:
xx_cancer_hpv$count/xx1_cancer_hpv$count


# now for none smokers:
xx_non_std_hpv <- data |> 
  filter(Dx.Cancer == 1, Dx.HPV == 0) |> 
  summarize(count=n())
# How many of them that 
xx1_non_std_hpv <- data |> 
  filter(!is.na(Dx.Cancer), Dx.HPV == 0) |> 
  summarize(count=n())
xx_non_std_hpv$count/xx1_non_std_hpv$count

```

Looks like there is a huge correlation between Dx.HPV and cancer. Lets visualize it:

```{r}

ggplot(data_long) +
  geom_bar(mapping = aes(x = factor(Dx.HPV), fill = factor(Dx.Cancer)), position = "fill") +
  labs(x = "HPV Diagnosis", y = "Proportion", fill = "Cancer Diagnosis") +
  scale_fill_manual(values = c("0" = "lightblue", "1" = "darkred")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 0, hjust = 0.5))


data_long |> 
  ggplot(aes(x = factor(Dx.Cancer), fill = STDs_value)) + 
  geom_bar(position = "dodge")+
  facet_wrap(~STDs_type)+
  ylim(0,100)

```

So we see here that actually none of the patients with other STDs than HPV have cancer.

Now we want to see if smokers is correlated with cervical cancer:

```{r}

ggplot(data_long) +
  geom_bar(mapping = aes(x = factor(Smokes), fill = factor(Dx.Cancer)), position = "fill") +
  labs(x = "HPV Diagnosis", y = "Proportion", fill = "Cancer Diagnosis") +
  scale_fill_manual(values = c("0" = "lightblue", "1" = "darkred")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 0, hjust = 0.5))
```

There doesnt seem to be a correlation between smoking and cervical cancer

Lets see if hormonal prevention is:

```{r}

ggplot(data_long) +
  geom_bar(mapping = aes(x = factor(Hormonal.Contraceptives), fill = factor(Dx.Cancer)), position = "fill") +
  labs(x = "Hormonal", y = "Proportion", fill = "Cancer Diagnosis") +
  scale_fill_manual(values = c("0" = "lightblue", "1" = "darkred")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 0, hjust = 0.5))+
  ylim(0,0.05)
```

There seems to be a correlation between taking hormonal contraceptives and cervical cancer.

Lets see if the amount of sexual partners could influence having STD:

```{r}
ggplot(data) +
  geom_bar(mapping = aes(x = factor(STDs), fill = factor(Number.of.sexual.partners)), position = "fill") +
  labs(x = "HPV Diagnosis", y = "Proportion", fill = "Cancer Diagnosis") +
  scale_fill_manual(values = c("0" = "lightblue", "1" = "darkred")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 0, hjust = 0.5))

```

An idea could be to do a package for future data coming in the same way. Maybe if you want to do the studies in more countries. Read the article to see what they do.

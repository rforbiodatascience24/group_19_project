---
title: "Final_project"
format: html
editor: visual
---

## Loading data

```{r}
data <- read.csv("risk_factors_cervical_cancer.csv")
```

## Loading library

```{r}
library(tidyverse)
library(dplyr)
library(patchwork)
library(broom)  
library(cowplot)
```

## Cleaning

Correcting NAs

```{r}
data <- data %>%
  mutate(across(where(is.character), ~na_if(., "?")))
```

Changing binaries to 'yes' and 'no'

```{r}
data <- data %>%
  mutate(Smokes = case_when(
    Smokes == "0.0" ~ "no",
    Smokes == "1.0" ~ "yes"),
    Smokes = str_to_title(Smokes))

data <- data |> 
  mutate(Hormonal.Contraceptives = case_when(
    Hormonal.Contraceptives == "1.0" ~ "yes",
    Hormonal.Contraceptives == "0.0" ~ "no"),
    Hormonal.Contraceptives = str_to_title(Hormonal.Contraceptives))

data <- data |>  
  mutate(IUD = case_when(IUD == "0.0" ~ "no",
                         IUD == "1.0" ~ "yes"))

data <- data |>
  mutate(Dx.Cancer = case_when(Dx.Cancer == "0" ~ "Negative",
                               Dx.Cancer == "1" ~ "Positive"))

```

Updating names, removing dots

```{r}
data <- data |> 
  rename('Smokes.years'= Smokes..years.,
         'Smokes.packs.years' = Smokes..packs.year.) |> 
  mutate(Smokes.years = as.numeric(Smokes.years),
         Smokes.packs.years = as.numeric(Smokes.packs.years))


data <- data |> 
  rename_with(~ gsub("^STDs\\.\\.", "", .))
```

From character to integer

```{r}
data  <- data|> 
  mutate(Number.of.sexual.partners = as.integer(Number.of.sexual.partners),
         First.sexual.intercourse = as.integer(First.sexual.intercourse),
         Num.of.pregnancies = as.integer(Num.of.pregnancies))
```

Creating a Patient ID

```{r}
data <- data |> 
  mutate(ID = row_number()) |> 
  select(ID, everything())
```

## Creating long data

```{r}
data_long <- data %>%
  pivot_longer(cols = starts_with("STDs."), 
               names_to = "STD_type", 
               values_to = "has_STD") %>%
  mutate(
    STD = ifelse(has_STD == "1.0", STD_type, NA)  # Keep STD name where 1 is present
  ) %>%
  group_by(ID) %>%
  mutate(
    # Concatenate STD names for each ID, if none, set "No"
    STD = ifelse(all(is.na(STD)), "No", paste(na.omit(STD), collapse = ", "))
  ) %>%
  ungroup() %>%
  select(-STD_type, -has_STD) %>%
  distinct() |> 
  separate_rows(STD, sep = ",")
```

## Changing '.' to '\_' in every column. Lastly, we are removing the double underscores if any.

```{r}
data_long <- data_long |> 
  rename_with(~ str_remove(.,"\\.$")) |> #removes the '.' from the last word in columns
  rename_with(~ str_replace_all(., "\\.", "_")) |> 
  rename_with(~ str_replace_all(.x, "__", "_"))
```

## Cleaning up STD

Removed STDs from the beginning of each row in column STD. Capitalize each word.

```{r}
data_long <- data_long |> 
  mutate(STD = str_remove(STD, "^STDs\\."),
         STD = str_remove(STD, "^ STDs\\."),
         STD = str_replace_all(STD, "\\.", " "),
         STD = str_to_title(STD))
```

Remove column STDs (We have the new STD column).

```{r}
data_long <- data_long |> 
  select(-number) 
```

Creating new number column that counts number of the same IDs.

```{r}
data_long <- data_long |> 
  group_by(ID) |> 
  mutate(Number_of_STDs = if_else(all(is.na(STD) | STD == "No"), 0, n_distinct(STD, na.rm = TRUE))) |> 
  ungroup() 
```

Moving STD and Number of STD columns further ahead.

```{r}
data_long <- data_long |> 
  select(
    1:12,               
    STD,                
    Number_of_STDs,      
    everything()        
  )
```



```{r}
Numb_sex <- ggplot(data = data_long, aes(y = Dx_Cancer, x = Number_of_sexual_partners, fill = Dx_Cancer)) +
  geom_boxplot(show.legend = FALSE) +
   labs(y = "Cancer Diagnosis",
        x = "Number of Sexual Partners") +
  theme_bw()


first_sex_int <- ggplot(data = data_long, aes(y = Dx_Cancer, x = First_sexual_intercourse, fill = Dx_Cancer)) +
  geom_boxplot(show.legend = FALSE) +
   labs(y = "Cancer Diagnosis",
        x = "Age of First Sexual Intercourse") +
  theme_bw()


(Numb_sex / first_sex_int) +
  plot_annotation(
    title = "Comparison of Sexual Health and Cancer Diagnosis",
    caption = "Source: https://doi.org/10.24432/C5Z310")




(Numb_sex / first_sex_int) +
  plot_annotation(
    title = "Comparison of Sexual Health Metrics and Cancer Diagnosis",
    subtitle = "Boxplots showing distribution of sexual health data by cancer diagnosis",
    caption = "Data source: Your dataset"
  )

```

Normalized Counts of STD by Cancer Diagnosis

```{r}
data_normalized_STD <- data_long %>%
  group_by(Dx_Cancer, STD) %>%
  summarize(count = n(), .groups = "drop") %>%
  group_by(Dx_Cancer) %>%
  mutate(prop = count / sum(count))

ggplot(data = data_normalized_STD, aes(x = STD, y = prop, fill = Dx_Cancer)) +
  geom_bar(stat = "identity", position = "dodge") +
  facet_grid(~Dx_Cancer) +
  labs(title = "Normalized Counts of STD by Cancer Diagnosis",
       x = "STD",
       y = "Proportion",
       fill = "Cancer Diagnosis",
       caption = "Source: https://doi.org/10.24432/C5Z310") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

```{r}
# Parked for now


data_normalized_HC <- data_long %>%
  group_by(Hormonal_Contraceptives, STD) %>%
  summarize(count = n(), .groups = "drop") %>%
  group_by(Hormonal_Contraceptives) %>%
  mutate(prop = count / sum(count))

ggplot(data = data_normalized_HC, aes(x = STD, y = prop, fill = Hormonal_Contraceptives)) +
  geom_bar(stat = "identity", position = "dodge") +
  facet_grid(~Hormonal_Contraceptives) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

## Plotting Mathilde
```{r, fig.height=5}
data_long %>%
  group_by(STD) |> 
  summarise(STD_count=n()) |> 
  ggplot(aes(x=STD, y=STD_count)) +
  geom_bar(stat = "identity", color = 'black', fill = 'white') +
  geom_text(aes(label=STD_count),vjust = -0.5, size = 3) +
  theme_classic() +
  labs(x = "STD", y = "Count", title = "Counts of Different STDs") +
  theme(axis.text.x = element_text(hjust = 1,angle = 90, vjust = 0.5))
```
## PCA 
A Principal Component analysis is key if a data set consists of many variables and redundancy (e.g., height and weight). It simplifies the data by assuming that all variables contributes equally and thereby put them into components based on a covariance matrix. Scaling is applied to prevent larger variables dominating the results. All in all it identifies the main sources of variation in our data.

###PCA of STD
```{r}
pca_fit <- data_long |> 
  select(where(is.numeric)) |>  
  mutate(across(everything(), ~ ifelse(is.na(.), mean(., na.rm = TRUE), .))) |> #transform NAs to the mean of the column
  prcomp(scale = TRUE)
```

We expect to see a correlation between patients with no STDs and those

.fittedPC1 (x-axis): Represents the first principal component (captures the most variance in the dataset).
.fittedPC2 (y-axis): Represents the second principal component (captures the second-most variance).
```{r, fig}

#Based on STD type
pca_nSTD_na <-pca_fit |> 
  augment(data_long) |>  filter(STD !="No") |> 
  ggplot(aes(.fittedPC1, .fittedPC2, color = STD)) + 
  geom_point(size = 1.5) +
  theme_half_open(12) + background_grid() + theme(legend.position = "none")

pca_wSTD_na <-pca_fit |> 
  augment(data_long) |>
  ggplot(aes(.fittedPC1, .fittedPC2, color = STD)) + 
  geom_point(size = 1.5) +
  theme_half_open(12) + background_grid()

(pca_nSTD_na + pca_wSTD_na)

#Based on yes and no
pca_STD<- pca_fit |> 
  augment(data_long) |> filter(!is.na(STDs)) |> 
  ggplot(aes(.fittedPC1, .fittedPC2, color = STDs)) + 
  geom_point(size = 1.5) +
  theme_half_open(12) + background_grid() + scale_color_discrete(labels = c("0.0" = "No", "1.0" = "Yes")) +
  labs(color = "STD Present")

(pca_nSTD_na + pca_wSTD_na)
pca_STD

```
We do not see any correlation between the columns based on STD. This is a bit surprising as we'd expect there to be a correlation between patients that has had an STD and not. However we can conclude that patients without STDs share more consistent patterns as they cluster a bit more together compared to the positive patients with a wider spread. 
Additionally, observations on the plot furthers away from 0 indicate patients with features very different from the one closer to 2. In general it all suggests that contributing factors are more widely spread.

### The data in PC coordinates
```{r}
pca_fit |> 
  tidy(matrix = "rotation")
# define arrow style for plotting
arrow_style <- arrow(
  angle = 20, ends = "first", type = "closed", length = grid::unit(10, "pt")
)

# plot rotation matrix
pca_fit %>%
  tidy(matrix = "rotation") %>%
  pivot_wider(names_from = "PC", names_prefix = "PC", values_from = "value") %>%
  ggplot(aes(PC1, PC2)) +
  geom_segment(xend = 0, yend = 0, arrow = arrow_style) +
  geom_text(
    aes(label = column),
    hjust = 1, nudge_x = -0.02, 
    color = "darkblue"
  ) +
  xlim(-1.25, .5) + ylim(-.5, 1) +
  coord_fixed() + # fix aspect ratio to 1:1
  theme_minimal_grid(12)

```

### The variance explained by each PC
```{r}
pca_fit %>%
  tidy(matrix = "eigenvalues")

pca_fit %>%
  tidy(matrix = "eigenvalues") %>%
  ggplot(aes(PC, percent)) +
  geom_col(fill = "darkblue", alpha = 0.8) +
  scale_x_continuous(breaks = 1:17) +
  scale_y_continuous(
    labels = scales::percent_format(),
    expand = expansion(mult = c(0, 0.01))
  ) +
  theme_minimal_hgrid(12)
```




## Making a new PCA plot based on patients have cancer or not. Created a new column based on Dx_cancer
```{r}
cancer_data <- data_long |> 
  mutate(Cancer = if_else(Dx_Cancer == "Positive",1,0)) #will maybe have to be added to the data_long column in the beginning

pca_fit_cancer <- cancer_data |> 
  select(where(is.numeric)) |>  
  mutate(across(everything(), ~ ifelse(is.na(.), mean(., na.rm = TRUE), .))) |> 
  prcomp(scale = TRUE)

pca_fit_cancer |> 
  augment(cancer_data) |> 
  ggplot(aes(.fittedPC1, .fittedPC2, color = factor(Cancer))) + 
  geom_point(size = 1.5) +
  theme_half_open(12) + background_grid() + scale_color_discrete(labels = c("0" = "Negative", "1" = "Positive")) +
  labs(color = "Cancer Present")

summary(pca_fit_cancer)
```
The negative patients form a dense cluster in the right corner, whereas it is more spread out to the lower-left corner for the positive ones. Patients with positive cancer diagnosis have more distinct patterns in their values compared to those with no cancer. This separation suggests that features e.g., age, smoking or STD's might contribute strongly to distinguish cancer-positive patients. The cancer-positive patients closer to -12 have more extreme feature combinations that strongly distinguish them from the average patient. The wide range in PC1 reflects that cancer-related features have strong influence. 

### The data in PC coordinates
```{r}
pca_fit_cancer |> 
  tidy(matrix = "rotation")
# define arrow style for plotting
arrow_style <- arrow(
  angle = 20, ends = "first", type = "closed", length = grid::unit(10, "pt")
)

# plot rotation matrix
pca_fit_cancer %>%
  tidy(matrix = "rotation") %>%
  pivot_wider(names_from = "PC", names_prefix = "PC", values_from = "value") %>%
  ggplot(aes(PC1, PC2)) +
  geom_segment(xend = 0, yend = 0, arrow = arrow_style) +
  geom_text(
    aes(label = column),
    hjust = 1, nudge_x = -0.02, 
    color = "darkblue"
  ) +
  xlim(-1.25, .5) + ylim(-.5, 1) +
  coord_fixed() + # fix aspect ratio to 1:1
  theme_minimal_grid(12)

```
The arrows shows how the features contribute to the principal components analysis. The longer arrows (like Number_of_diagnosis, Schiller, Hinselmann and Biopsy) indicate that they strongly contribute to the variability captured by PC1 and PC2. The ones with shorter arrows contributes less to the variability. The variables pointing in the same direction are positive correlated whereas variables pointing in opposite directions are negatively correlated. Many of the variables cluster near the origin or overlap, suggesting shared or lower influence on PC1 and PC2 - cleaning the plot or investigating other components might be good.
### The variance explained by each PC

A general rule is to keep the components that explains up to 95% of the variance.
```{r}
pca_fit_cancer %>%
  tidy(matrix = "eigenvalues")

pca_fit_cancer %>%
  tidy(matrix = "eigenvalues") %>%
  ggplot(aes(PC, percent)) +
  geom_col(fill = "darkblue", alpha = 0.8) +
  scale_x_continuous(breaks = 1:17) +
  scale_y_continuous(
    labels = scales::percent_format(),
    expand = expansion(mult = c(0, 0.01))
  ) +
  theme_minimal_hgrid(12)
```
After PC4 and PC% the variance explained by each PC drops significantly forming an 'elbow'. After PC10 the other components explain very little variance. These components might not be useful for analysing or modeling.

```


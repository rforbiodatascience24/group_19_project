---
title: "05_analysis_1"
format:
  html:
    self-contained: true
editor: visual
---

## Loading libraries

```{r}
library(tidyverse)
library(patchwork)
```

## Loading data

```{r}
data_aug <- read_csv("../data/03_data_aug.csv")
```

## Plotting

```{r}
Numb_sex <- ggplot(data = data_aug, aes(y = Dx_Cancer, x = Number_of_sexual_partners, fill = Dx_Cancer)) +
  geom_boxplot(show.legend = FALSE) +
   labs(y = "Cancer Diagnosis",
        x = "Number of Sexual Partners") +
  theme_bw()


first_sex_int <- ggplot(data = data_aug, aes(y = Dx_Cancer, x = First_sexual_intercourse, fill = Dx_Cancer)) +
  geom_boxplot(show.legend = FALSE) +
   labs(y = "Cancer Diagnosis",
        x = "Age of First Sexual Intercourse") +
  theme_bw()


boxplot_sex_his <- (Numb_sex / first_sex_int) +
  plot_annotation(
    title = "Comparison of Sexual History and Cancer Diagnosis")

boxplot_sex_his

#save plot
ggsave("../results/images/05_boxplot_sex_his.png", plot = boxplot_sex_his)

```

Normalized Counts of STD by Cancer Diagnosis

```{r}
data_normalized_STD <- data_aug |>
  group_by(Dx_Cancer, STD) |>
  summarize(count = n(), .groups = "drop") |>
  group_by(Dx_Cancer) |>
  mutate(prop = count / sum(count))


data_normalized_STD <- data_normalized_STD |>
  mutate(STD = fct_reorder(STD, count, .desc = TRUE))

barplot_STD <- ggplot(data = data_normalized_STD, aes(x = STD, y = prop, fill = Dx_Cancer)) +
  geom_bar(stat = "identity", position = "dodge") +
  facet_grid(~Dx_Cancer) +
  labs(title = "Proportion of STD type by Cancer Diagnosis",
       x = "STD",
       y = "Proportion",
       fill = "Cancer Diagnosis") +
  theme_bw() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate text
    plot.margin = margin(10, 10, 10, 50)  # Increase the left margin
  )

barplot_STD


#save plot
ggsave("../results/images/05_barplot_STD.png", plot = barplot_STD)
```

Age and Cancer diagnosis

```{r}
ggplot(data = data_aug, aes(y = Dx_Cancer, x = Age, fill = Dx_Cancer)) +
  geom_boxplot(show.legend = FALSE) +
  labs(y = "Cancer Diagnosis") +
  theme_bw()
```

Function for making a barplot

```{r}
create_proportional_barplot <- function(data, x_var, fill_var, 
                                        x_label = NULL, y_label = "Proportion", 
                                        fill_label = NULL, title = NULL) {
  if (is.null(x_label)) x_label <- x_var
  if (is.null(fill_label)) fill_label <- fill_var
  if (is.null(title)) title <- paste("Proportion of", fill_var, "by", x_var)

  filtered_data <- data %>%
    group_by(ID) %>%
    summarise(
      x_value = first(!!sym(x_var)),
      fill_value = first(!!sym(fill_var)),
      .groups = "drop"
    ) %>%
    filter(!is.na(x_value), !is.na(fill_value)) %>%
    mutate(fill_value = factor(fill_value))

  # Ensure color palette matches the levels of 'fill_value'
  color_palette <- setNames(
    c("lightblue", "darkred", "green", "orange")[1:length(levels(filtered_data$fill_value))],
    levels(filtered_data$fill_value)
  )

  ggplot(filtered_data, aes(x = x_value, fill = fill_value)) +
    geom_bar(position = "fill") +
    labs(x = x_label, y = y_label, fill = fill_label, title = title) +
    scale_fill_manual(values = color_palette) +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 0, hjust = 0.5))
}

proportion_plot <- create_proportional_barplot(data_aug, x_var = "Dx_Cancer", fill_var = "Dx_HPV")
ggsave("../results/images/05_proportion_plot.png", plot = proportion_plot, bg = "white")
```

Function for making a chi squared test

```{r}
calculate_chi_squared <- function(data, var1, var2) {
  # Summarize the data so each ID has one row, taking the first occurrence of var1 and var2
  filtered_data <- data %>%
    group_by(ID) %>%
    summarise(
      var1_value = first(!!sym(var1)),
      var2_value = first(!!sym(var2)),
      .groups = "drop"
    ) %>%
    filter(!is.na(var1_value), !is.na(var2_value))  # Remove rows with NA values
  
  # Create the contingency table
  contingency_table <- filtered_data %>%
    count(var1_value, var2_value) %>%
    pivot_wider(names_from = var2_value, values_from = n, values_fill = 0) %>%
    column_to_rownames("var1_value") %>%
    as.matrix()

  # Perform the chi-squared test
  chisq_result <- chisq.test(contingency_table)
  
  return(list(contingency_table = contingency_table, chisq_result = chisq_result))
}

calculate_chi_squared(data_aug, var1 = "Dx_Cancer", var2 = "Dx_HPV")
```
